    auto kedaneMax = [&](vector<int> &v) -> int {
        int sum = v[0], mx = v[0];
        for (int i = 1; i < v.size(); i++) {
            sum = max(v[i], sum + v[i]);
            mx = max(mx, sum);
        }
        return mx;
    };


auto kedaneMin = [&](vector<int> &v) -> int {
    int sum = v[0], mn = v[0];
    for (int i = 1; i < v.size(); i++) {
        sum = min(v[i], sum + v[i]); // Choose the smaller value
        mn = min(mn, sum);          // Update the minimum value
    }
    return mn;
};
